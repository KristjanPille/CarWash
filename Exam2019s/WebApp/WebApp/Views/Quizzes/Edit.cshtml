@using System.Collections
@using System.Linq
@model IEnumerable<PublicApi.DTO.v1.QuestionAnswerDummyV2>


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Question.NameOfQuestion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Answer1)
        </th>
    </tr>
    </thead>
    <tbody>
    @{
        var i = 0;
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Question.NameOfQuestion)
            </td>
            @if (ViewData["questionAnswerDummy1"] != null && i == 0)
            {
                <td>
                    <select class="form-control" asp-items="ViewBag.questionAnswerDummy1"></select>
                </td>
            }
            @if (ViewData["questionAnswerDummy2"] != null && i == 1)
            {
                <td>
                      <select class="form-control" asp-items="ViewBag.questionAnswerDummy2"></select>
                </td>
            }
            @if (ViewData["questionAnswerDummy3"] != null && i == 2)
            {
                <td>
                     <select class="form-control" asp-items="ViewBag.questionAnswerDummy3"></select>
                </td>
            }
            @if (ViewData["questionAnswerDummy4"] != null && i == 3)
            {
                <td>
                  <select class="form-control" asp-items="ViewBag.questionAnswerDummy4"></select>
                </td>
            }
            @if (ViewData["questionAnswerDummy5"] != null && i == 4)
            {
                <td>
              <select class="form-control" asp-items="ViewBag.questionAnswerDummy5"></select>
                </td>
            }
        </tr>
        i+=1;
    }
    }
    </tbody>
</table>